// src/core/theme.ts
var ThemeManager = class {
  constructor(initialThemes) {
    this.themes = {};
    this.currentTheme = null;
    if (initialThemes) {
      this.themes = initialThemes;
    }
    this.loadThemeFromStorage();
    this.detectSystemTheme();
    this.watchSystemTheme();
  }
  // Create a new theme
  createTheme(name, theme) {
    this.themes[name] = theme;
  }
  // Set a theme by name
  setTheme(name) {
    const theme = this.themes[name];
    if (!theme) {
      console.warn(`Theme ${name} does not exist.`);
      return;
    }
    Object.entries(theme).forEach(([key, value]) => {
      document.documentElement.style.setProperty(`--${key}`, value);
    });
    this.currentTheme = name;
    localStorage.setItem("theme", name);
  }
  getCurrentTheme() {
    return this.currentTheme;
  }
  // Load theme from local storage
  loadThemeFromStorage() {
    const storedTheme = localStorage.getItem("theme");
    if (storedTheme && this.themes[storedTheme]) {
      this.setTheme(storedTheme);
    }
  }
  // Detect system theme (light/dark) and set it
  detectSystemTheme() {
    const prefersDarkScheme = window.matchMedia(
      "(prefers-color-scheme: dark)"
    ).matches;
    this.setTheme(prefersDarkScheme ? "dark" : "light");
  }
  // Watch for system theme changes and update theme
  watchSystemTheme() {
    window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", (event) => {
      this.setTheme(event.matches ? "dark" : "light");
    });
  }
};

// src/modules/theme.ts
var theme_default = ThemeManager;
export {
  theme_default as default
};
